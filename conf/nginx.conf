#user  nobody;
worker_processes  1;

error_log  logs/error.log  error;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	
    # Lua configuration
    lua_package_path    "$prefix/conf/?.module;;";
	lua_shared_dict http_guard 10m;
	init_by_lua_file 'conf/init.lua';
	header_filter_by_lua_file 'conf/send_cookie.lua';
	access_by_lua_file 'conf/http_guard.lua';
	
    server {
        listen     80;
        server_name www.http-guard.com;
        root   /home/wecenter;
        index  index.php index.html index.htm;
		location ~ \.php$ {
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /home/wecenter$fastcgi_script_name;
            include        fastcgi_params;			
		}
		location /status {
			default_type text/html;
            content_by_lua '
                local logging = require("logging")
                local count, avg, elapsed_time = logging.get_plot(ngx.shared.http_guard, "www.centos.bz")
                local qps = 0
                if elapsed_time > 0 then
                    qps = count / elapsed_time
                end				
				ngx.say("<pre>")
				ngx.say("qps:"..qps.."\\n".."avg:"..avg.."\\n".."count:"..count)
				ngx.say("</pre>")
            ';
		}
		log_by_lua '
			local logging = require("logging")
			local request_time = ngx.now() - ngx.req.start_time()
			logging.add_plot(ngx.shared.http_guard, "www.centos.bz", request_time)
		';
		

    }
}